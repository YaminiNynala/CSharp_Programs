HOME CONTROLLER:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using WebAPIPractice.Models;

namespace WebAPIPractice.Controllers
{
    public class Home1Controller : ApiController
    {
        public static List<User> usersList = new List<User>()
        {
            new User{id=1,name="yamini",email="yamini@gmail.com",password="welcome",jobStatus=true}
        };

        [HttpGet]
        public List<User> getUsers()
        {
            //http://localhost:64838/api/Home1/getUsers
            try
            {
                usersList = DBConnection.getDataFromTable();
                //usersList = DBConnection.getDataOfSpecifiedUser();
            }
            catch(Exception e)
            {
                Console.WriteLine(e.Message);
            }
            return usersList;
        }

        [HttpPost]
        public string addUser(User u1)
        {
            string response = string.Empty;
            try
            {
                usersList.Add(u1);
                DBConnection.insertDataIntoTable(u1);
                response = "User added succesfully";
            }
            catch(Exception e)
            {
                Console.WriteLine(e.Message);
            }
            return response;
        }

        [HttpPut]
        public string updateUser(User u1)
        {
            string response = string.Empty;
            try
            {
                if(usersList.Exists(x=>x.id==u1.id))
                {
                    //usersList.FindAll(x => x.id == u1.id)[0].email = u1.email;
                    DBConnection.updateDataInTable(u1);
                    response = "User updated succesfully";
                }
                else
                {
                    response = "User not exist in the list";
                }
            }
            catch(Exception e)
            {
                Console.WriteLine(e.Message);
            }
            return response;
        }

        [HttpDelete]  
        public string deleteUser(int id)
       {
            string response = string.Empty;
            try
            {
                if (usersList.Exists(x => x.id == id))
                {
                    //usersList.FindAll(x => x.id == id);
                    DBConnection.deleteDataFromTable(id);
                    response = "User deleted succesfully";
                }
                else
                {
                    response = "User not exist to delete from the list";
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            return response;
        }

        [HttpGet]
        [Route("api/home1/getSpecifiedUser")]
        public List<User> getSpecifiedUser(int id)
        {
            //http://localhost:64838/api/Home1/getUsers
            try
            {
                usersList = DBConnection.getDataOfSpecifiedUser(id);
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            return usersList;
        }
    }
}



USER CLASS:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace WebAPIPractice.Models
{
    public class User
    {
        public int id;
        public string name;
        public string email;
        public string password;
        public bool jobStatus;
    }
}



DB CONNECTION:

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using System.Linq;
using System.Web;


namespace WebAPIPractice.Models
{
    public class DBConnection
    {
        public static List<User> getDataFromTable()
        {
            List<User> usersList = new List<User>();
            try
            {
                SqlConnection conn = new SqlConnection("Data Source = 192.168.1.9; Database = Training2022; User Id = tuser; Password = tecra1@3");
                conn.Open();
                string query = $"select * from _txtFileUser";
                SqlCommand cmd = new SqlCommand(query, conn);
                //SqlCommand cmd = new SqlCommand("sp_getData", conn);

                SqlDataReader reader = cmd.ExecuteReader();
                if (reader.HasRows)
                {
                    foreach (DbDataRecord row in reader)
                    {
                        User UserObj = new User();
                        UserObj.id = row.GetInt32(0);
                        UserObj.name = row.GetString(1);
                        UserObj.email = row.GetString(2);
                        UserObj.password = row.GetString(3);
                        UserObj.jobStatus = row.GetBoolean(4);

                        usersList.Add(UserObj);
                    }
                }
                conn.Close();
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            return usersList;
        }
        public static void insertDataIntoTable(User userData)
        {
            try
            {
                SqlConnection conn = new SqlConnection("Data Source = 192.168.1.9; Database = Training2022; User Id = tuser; Password = tecra1@3");
                conn.Open();
                //string query = $"insert _txtFileUser values({userData.id},'{userData.name}','{userData.email}','{userData.password}',{(userData.jobStatus ? 1 : 0)})";
                //SqlCommand cmd = new SqlCommand(query, conn);

                SqlCommand cmd = new SqlCommand("sp_insertUser", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@id", SqlDbType.Int).Value = userData.id;
                cmd.Parameters.Add("@name", SqlDbType.NVarChar).Value = userData.name;
                cmd.Parameters.Add("@email", SqlDbType.NVarChar).Value = userData.email;
                cmd.Parameters.Add("@password", SqlDbType.NVarChar).Value = userData.password;
                cmd.Parameters.Add("@status", SqlDbType.Bit).Value = userData.jobStatus;
                cmd.ExecuteNonQuery();
                conn.Close();
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }


        public static void updateDataInTable(User u1)
        {
            try
            {
                SqlConnection conn = new SqlConnection("Data Source = 192.168.1.9; Database = Training2022; User Id = tuser; Password = tecra1@3");
                conn.Open();
                //string query = $"update _txtFileUser set email = '{u1.email}' where id='{u1.id}'";
                //SqlCommand cmd = new SqlCommand(query, conn);
                SqlCommand cmd = new SqlCommand("sp_updateUser1", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                //cmd.Parameters.Add("@id", SqlDbType.Int).Value = u1.id;
                cmd.Parameters.Add("@name", SqlDbType.Int).Value = u1.name;
                cmd.Parameters.Add("@email", SqlDbType.NVarChar).Value = u1.email;
                cmd.ExecuteNonQuery();
                conn.Close();
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }
        public static void deleteDataFromTable(int id)
        {
            try
            {
                SqlConnection conn = new SqlConnection("Data Source = 192.168.1.9; Database = Training2022; User Id = tuser; Password = tecra1@3");
                conn.Open();
                //string query = $"delete from _txtFileUser where id={id}";
                //SqlCommand cmd = new SqlCommand(query, conn);
                SqlCommand cmd = new SqlCommand("sp_deleteUser1", conn);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Add("@id", SqlDbType.Int).Value = id;
                cmd.ExecuteNonQuery();
                conn.Close();
            }
            catch(Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }

        public static List<User> getDataOfSpecifiedUser(int id)
        {
            List<User> userData = new List<User>();
            try
            {
                SqlConnection conn = new SqlConnection("Data Source = 192.168.1.9; Database = Training2022; User Id = tuser; Password = tecra1@3");
                conn.Open();
                string query = $"select * from _txtFileUser where id = {id}";
                SqlCommand cmd = new SqlCommand(query, conn);
                //SqlCommand cmd = new SqlCommand("sp_getDataOf1User", conn);

                SqlDataReader reader = cmd.ExecuteReader();
                if (reader.HasRows)
                {
                    foreach (DbDataRecord row in reader)
                    {
                        User u1 = new User();
                        u1.id = row.GetInt32(0);
                        u1.name = row.GetString(1);
                        u1.email = row.GetString(2);
                        u1.password = row.GetString(3);
                        u1.jobStatus = row.GetBoolean(4);

                        userData.Add(u1);
                    }
                }
                conn.Close();
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
            return userData;
        }
    }
}